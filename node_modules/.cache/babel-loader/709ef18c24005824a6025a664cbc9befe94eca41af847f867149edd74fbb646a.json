{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  _request(url, options) {\n    return fetch(`${this.baseUrl}${url}`, options);\n  }\n  getInitialCards() {\n    return this._request('/cards', {\n      headers: this.headers\n    }).then(this._getResponseData);\n  }\n  getUserInfo() {\n    // return fetch(`${this.baseUrl}/users/me`, {\n    //     headers: this.headers\n    // })\n    return this._request('/users/me', {\n      headers: this.headers\n    }).then(this._getResponseData);\n  }\n  editAvatar(formValues) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: formValues.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n  setUserInfo(formValues) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: formValues.name,\n        about: formValues.info\n      })\n    }).then(res => this._getResponseData(res));\n  }\n  setCard(formValues) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: formValues.name,\n        link: formValues.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n  deleteCard(card) {\n    return fetch(`${this.baseUrl}/cards/${card._cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n  setCardLike(card) {\n    return fetch(`${this.baseUrl}/cards/${card._cardId}/likes`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n  deleteCardLike(card) {\n    return fetch(`${this.baseUrl}/cards/${card._cardId}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-52',\n  headers: {\n    authorization: 'dfaf14aa-f273-4bf7-9d80-4b98802a6803',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","options","baseUrl","headers","_getResponseData","res","ok","json","Promise","reject","status","_request","url","fetch","getInitialCards","then","getUserInfo","editAvatar","formValues","method","body","JSON","stringify","avatar","link","setUserInfo","name","about","info","setCard","deleteCard","card","_cardId","setCardLike","deleteCardLike","api","authorization"],"sources":["/Users/sergejlozuk/Documents/develop/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n      this.baseUrl = options.baseUrl;\n      this.headers = options.headers;\n    }\n    _getResponseData (res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(`Ошибка ${res.status}`)\n    }\n    _request (url, options) {\n        return fetch(`${this.baseUrl}${url}`, options)\n    }\n    getInitialCards() {\n    return this._request('/cards', {\n        headers: this.headers\n    })\n    .then(this._getResponseData);\n    }\n    getUserInfo () {\n        // return fetch(`${this.baseUrl}/users/me`, {\n        //     headers: this.headers\n        // })\n        return this._request('/users/me', {\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n    editAvatar (formValues) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: formValues.link\n            })\n        })\n        .then(res => this._getResponseData(res));\n    }\n    setUserInfo (formValues) {\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: formValues.name,\n                about: formValues.info\n            })\n            })\n            .then(res => this._getResponseData(res));\n    }\n    setCard (formValues) {\n           return fetch(`${this.baseUrl}/cards`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n            name: formValues.name,\n            link: formValues.link\n        })\n    })\n    .then(res => this._getResponseData(res));\n    }\n    deleteCard (card) {\n        return fetch(`${this.baseUrl}/cards/${card._cardId}`, {\n     method: 'DELETE',\n     headers: this.headers\n    })\n    .then(res => this._getResponseData(res));\n    }\n    setCardLike (card) {\n        return fetch(`${this.baseUrl}/cards/${card._cardId}/likes`, {\n            method: 'PUT',\n            headers: this.headers\n        })\n        .then(res => this._getResponseData(res));\n    }\n    deleteCardLike (card) {\n        return fetch(`${this.baseUrl}/cards/${card._cardId}/likes`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n        .then(res => this._getResponseData(res));\n    }\n  }\n  \n     const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-52',\n    headers: {\n        authorization: 'dfaf14aa-f273-4bf7-9d80-4b98802a6803',\n        'Content-Type': 'application/json'\n    }\n});\nexport {api}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}