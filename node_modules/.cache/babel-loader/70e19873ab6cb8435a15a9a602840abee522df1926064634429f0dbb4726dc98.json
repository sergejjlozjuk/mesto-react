{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  _request(url, options) {\n    return fetch(`${this.baseUrl}${url}`, options).then(this._getResponseData);\n  }\n  getInitialCards() {\n    return this._request('/cards', {\n      headers: this.headers\n    });\n  }\n  getUserInfo() {\n    return this._request('/users/me', {\n      headers: this.headers\n    });\n  }\n  editAvatar(formValues) {\n    return this._request('/users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: formValues.link\n      })\n    });\n  }\n  setUserInfo(formValues) {\n    return this._request('/users/me', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: formValues.name,\n        about: formValues.info\n      })\n    });\n  }\n  setCard(formValues) {\n    return this._request('/cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: formValues.name,\n        link: formValues.link\n      })\n    });\n  }\n  deleteCard(card) {\n    return this._request(`/cards/${card._cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    });\n  }\n  setCardLike(card) {\n    console.log(1);\n    return this._request(`/cards/${card._id}/likes`, {\n      method: 'PUT',\n      headers: this.headers\n    });\n  }\n  deleteCardLike(card) {\n    return this._request(`/cards/${card._id}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-52',\n  headers: {\n    authorization: 'dfaf14aa-f273-4bf7-9d80-4b98802a6803',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","options","baseUrl","headers","_getResponseData","res","ok","json","Promise","reject","status","_request","url","fetch","then","getInitialCards","getUserInfo","editAvatar","formValues","method","body","JSON","stringify","avatar","link","setUserInfo","name","about","info","setCard","deleteCard","card","_cardId","setCardLike","console","log","_id","deleteCardLike","api","authorization"],"sources":["/Users/sergejlozuk/Documents/develop/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl\n    this.headers = options.headers\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка ${res.status}`)\n  }\n  _request(url, options) {\n    return fetch(`${this.baseUrl}${url}`, options)\n    .then(this._getResponseData)\n  }\n  getInitialCards() {\n    return this._request('/cards', {\n      headers: this.headers,\n    })\n  }\n  getUserInfo() {\n    return this._request('/users/me', {\n      headers: this.headers,\n    })\n  }\n  editAvatar(formValues) {\n    return this._request('/users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: formValues.link,\n      }),\n    })\n  }\n  setUserInfo(formValues) {\n    return this._request('/users/me', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: formValues.name,\n        about: formValues.info,\n      }),\n    })\n  }\n  setCard(formValues) {\n    return this._request('/cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: formValues.name,\n        link: formValues.link,\n      }),\n    })\n  }\n  deleteCard(card) {\n    return this._request(`/cards/${card._cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n  }\n  setCardLike(card) {\n    console.log(1)\n    return this._request(`/cards/${card._id}/likes`, {\n      method: 'PUT',\n      headers: this.headers,\n    })\n  }\n  deleteCardLike(card) {\n    return this._request(`/cards/${card._id}/likes`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-52',\n  headers: {\n    authorization: 'dfaf14aa-f273-4bf7-9d80-4b98802a6803',\n    'Content-Type': 'application/json',\n  },\n})\nexport { api }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}